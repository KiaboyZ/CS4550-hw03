{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["gen_digits","random","numbers","digits","length","Math","floor","splice","App","useState","setDigits","guesses","setGuesses","results","setResults","guess","setGuess","caption","setCaption","disabled","setDisabled","className","type","maxlength","minlength","name","onChange","input","target","value","placeholder","onClick","res","event","preventDefault","i","includes","lastIndexOf","validate_guess","concat","b","c","toString","get_result","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae511eb6.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\n\nfunction App() {\n  const [digits, setDigits] = useState(gen_digits());\n  const [guesses, setGuesses] = useState([]);\n  const [results, setResults] = useState([]);\n  const [guess, setGuess] = useState(\"\");\n  const [caption, setCaption] = useState(\"Try submitting a 4 digit number with no repeating values.\");\n  const [disabled, setDisabled] = useState(false);\n  \n  //based on https://github.com/NatTuck/scratch-2021-01/blob/master/notes-4550/04-react-intro/notes.md\n  function update_guess(input) {\n    setGuess(input.target.value);\n  }\n  \n  //based on https://github.com/NatTuck/scratch-2021-01/blob/master/notes-4550/04-react-intro/notes.md\n  function submit_guess() {\n    event.preventDefault();\n    var res;\n    \n    if (validate_guess()) {\n      setGuesses(guesses.concat(guess));\n      res = get_result();\n      setResults(results.concat(res));\n      setGuess(\"\");\n      \n      if (res === \"4B0C\") {\n        let msg = \"YOU WIN: Secret number was \" + digits + \". Press Reset to play again.\";\n        setCaption(msg);\n        setDisabled(true);\n        return;\n      }\n      \n      if (results.length === 7) {\n        let msg = \"YOU LOSE: Secret number was \" + digits + \". Press Reset to play again.\";\n        setCaption(msg);\n        setDisabled(true);\n        return;\n      }\n    }\n  }\n  \n  function validate_guess() {\n    var numbers = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n    \n    if (guess.length !== 4) {\n      setCaption(\"ERROR: Guess must be 4 characters long.\");\n      return false;\n    }\n    \n    for (let i = 0; i < 4; i++) {\n      if (!numbers.includes(guess[i])) {\n        setCaption(\"ERROR: Characters must be digits 0-9.\");\n        return false;\n      }\n      \n      if (guess.lastIndexOf(guess[i]) !== i) {\n        setCaption(\"ERROR: No duplicate characters allowed.\");\n        return false;\n      }\n    }\n    \n    if (guesses.includes(guess)) {\n      setCaption(\"ERROR: Guesses can not be reused.\");\n      return false;\n    }\n    \n    setCaption(\"Try submitting a 4 digit number with no repeating values.\");\n    return true;\n  }\n  \n  function get_result() {\n    var b = 0;\n    var c = 0;\n    for (let i = 0; i < 4; i++) {\n      if (digits[i] === guess[i]) {\n        b++;\n      } else if (digits.includes(guess[i])) {\n        c++;\n      }\n    }\n    var r = b.toString() + \"B\" + c.toString() + \"C\";\n    return r;\n  }\n  \n  function reset_game() {\n\t  setDigits(gen_digits());\n    setGuesses([]);\n    setResults([]);\n    setGuess(\"\");\n    setCaption(\"Try submitting a 4 digit number with no repeating values.\");\n    setDisabled(false);\n  }\n  \n  return (\n    <div className=\"App\">\n      <body>\n        <h1>Bulls and Cows</h1>\n        <form>\n          <table>\n            <caption>{caption}</caption>\n            <thead>\n              <tr>\n                <th><input type=\"text\" maxlength=\"4\" minlength=\"4\" name=\"guess\" onChange={update_guess} placeholder=\"####\" value={guess} disabled={disabled} /></th>\n                <th><input type=\"submit\" onClick={submit_guess} value=\"Submit Guess\" disabled={disabled} /></th>\n                <th><input type=\"reset\" onClick={reset_game} value=\"Reset\"/></th>\n              </tr>\n              <br/><tr>\n                <th></th>\n                <th>Guess</th>\n                <th>Result</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <th>1</th>\n                <td>{guesses[0]}</td>\n                <td>{results[0]}</td>\n              </tr>\n              <tr>\n                <th>2</th>\n                <td>{guesses[1]}</td>\n                <td>{results[1]}</td>\n              </tr>\n              <tr>\n                <th>3</th>\n                <td>{guesses[2]}</td>\n                <td>{results[2]}</td>\n              </tr>\n              <tr>\n                <th>4</th>\n                <td>{guesses[3]}</td>\n                <td>{results[3]}</td>\n              </tr>\n              <tr>\n                <th>5</th>\n                <td>{guesses[4]}</td>\n                <td>{results[4]}</td>\n              </tr>\n              <tr>\n                <th>6</th>\n                <td>{guesses[5]}</td>\n                <td>{results[5]}</td>\n              </tr>\n              <tr>\n                <th>7</th>\n                <td>{guesses[6]}</td>\n                <td>{results[6]}</td>\n              </tr>\n              <tr>\n                <th>8</th>\n                <td>{guesses[7]}</td>\n                <td>{results[7]}</td>\n              </tr>\n            </tbody>\n          </table>\n        </form>\n      </body>\n    </div>\n  );\n}\n\n// I am allowing the number to start with 0.\nfunction gen_digits() {\n  var numbers = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n  var digits = \"\";\n  var random;\n\n  while (digits.length < 4) {\n    random = Math.floor(Math.random() * numbers.length);\n    digits += numbers[random];\n    numbers.splice(random, 1);\n  }\n  \n  return digits;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}